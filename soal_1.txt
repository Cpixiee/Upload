Si Toni mendarat musim panas 1998 di pelabuhan Manhattan
Bersama delegasi berdiri di tepi kapal di pagar haluan
Masuk perairan New York disambut lambaian Patung Kemerdekaan
Pelabuhan kecintaan penyair kenamaan Walt Whitman

Sembilan burung camar di permukaan laut berlayangan
Udara panas bergetar lembab cuaca berkilauan
Pencakar langit berbaris tinggi rendah dari kiri ke kanan
Begitu mendarat mereka berangkat ke ibukota Di-Si di selatan

Delegasi America Corruption Watch bersemangat empat lima
Di ibukota bertanyalah Department of State lewat juru-bicara
“Mengapa ikut campur urusan kami bapak-bapak dari Indonesia
Apakah anda sudah jadi Siskamling Dunia?”

Menjawab si Toni ketua delegasi, dia orang masih sangat muda
“Itu betul bahkan kami juga Hansip Antarbangsa
Pos Komando RT Belahan Utara / RW Benua Amerika
Kegiatan ini adalah karena kami memang tak ada kerja ”

“Jadinya sibuk mengurus negeri lain 10.000 kilometer jauhnya
Di samping itu sebagai negara Indonesia telanjur adidaya
Kemana-mana mengajarkan Hak Asasi Manusia
Bagaimana bertata cara budi pekerti yang mulia.”

Juru-bicara kulit pucat itu merah mukanya:
“Janganlah bapak mengajari kami akhlak utama
Bagi bangsa saya moralitas itu sangat luhur letaknya
Maaf, bukankah skandal di pendopo istana Jakarta

Akhirnya sesudah berdusta, kepala negara mengaku juga
Yang melibatkan Genduk Meniko tebal rambutnya?”

Menjawab si Toni II bergaya lumayan arogan:
“Di negeri saya moral syahwat tidak jadi persoalan
Kalau diisap cerutu kepala negara jadi kecanduan
Itu masalahnya sendiri secara kepribadian

“Terserah pula mau sistem borongan atau ketengan
Jangan diaduk-aduk soal moral dengan perpolitikan
Yang penting warga kami makmur tak ada pengangguran
Sedangkan di Amerika ini depresi moneter sudah 12 bulan

“Di layar TV kami lihat rakyat kalian antri roti berdesakan
Orang i berjumlah jutaan
Mahasiswa berdemo besar-besaran setiap akhir pekan
Begitulah akibat salah urus yang berkepanjangan.”

Mendengar ini juru-bicara Deparlu tiba-tiba merendah diri:
“Salah urus negara memang itu soal gawat kami
Tapi tolonglah dana bantuan pinjaman Ai-Em-Ef dicairkan dini
Jangan biarkan rakyat Amerika sengsara sangsai begini.”

Si Toni III, kedua tangan berkacak pinggang berkata:
“Soal Ai-Em-Ef soal Bank Dunia
Masalah kurangnya roti dan hilangnya lapangan kerja
Organisasi Ei-Si-Dabelyu kami tak ada tanggung jawabnya

“Dari jauh-jauh kami datang ke sika
Mau memantau langsung koruptifnya Amerika
Menghajar birokrasinya memutar telinga swastanya
Memang kerja kami mengorek-korek aib ini bangsa

“Untuk itu kami dengan LSM sini kerjasama
LSM kulit hitam dari Louisiana
LSM kulit merah dari North Dakota
LSM Chicano dari South California

Majalah Time,  SeCond dan Editor yang dicabut SIUPP-nya
Semua kami guyuri rupiah besar jumlahnya.”

Juru-bicara State Department mengeluarkan perkataan:
“Dos pundi, woalah kepriben to mas, cara anda menyikapi persoalan
Bahasa badan yang menyolok kok digunakan
Di sana sini, maaf, terasa berlebihan arogan
Begitu jauh mendalam hobi sampeyan campur tangan

“Mentang-mentang sudah 222 tahun merdeka
Dan kini Indonesia satu-satunya negara adidaya
Kami Amerika ‘kan merdeka baru 53 tahun saja
Ukuran kalian tak kena, kepada kami kalian paksa”

Si Toni IV bersemangat melakukan penyelaan:
“Hey bagaimana tidak kena? Dan ini bukan paksaan
Nilai-nilai ini universal, man Universal, man.”

Juru-bicara Deparlu Amerika, pernah bertugas di Tanah Sunda:
“Kiyeu kang, Indonesia teh, memang sejak 1776 sudah merdeka
Proklamasi Amerika, 'kan baru tahun 1945 saja
Tapi kalian menuntut ukuran HAM sederajat setara
Begitu juga tingkat korupsi disamakan pula ”

“Ini jauh, atuh, di luar garis keadilan namanya
Jadi kalau kalian gigih mau memeriksa kami juga
Ya jajarkan 'GUNAKAN INI UNTUK MENJAWAB SOAL NO 1 : kamu_hebat ' donesia 1829 saja
Ketika keduanya sama-sama 53 tahun merdeka
Baru parameternya kena dan setara.”

***
Sementara itu suhu panas akan sangat jauh bepergian
Dan musim gugur bersiap-siap merontokkan dedaunan
Membagi warna cokelat, merah dan kuning ke hutan-hutan
Serangga menggerik dan unggas bersiul bersahutan

Cuaca berkaca di termometer pelahan menurunkan angka
Lihat penyair rambut perak Robert Frost di rimba berkereta kuda
Malam beribu juta serpih putih turun ke bumi tanpa suara
Begitu banyak jawab tersedia tapi kenapa yang kucari tanya

***
Delegasi America Corruption Watch dengan semangat empat lima
Sibuk mengurus negeri lain 10.000 kilometer jauhnya
Mengemasi pakaian dalam, mencucikan dan menjemur semua
Saban sebentar memberi wawancara di media massa

Setelah tentang parameter kedua pihak saling setuju
Bertukar dokumen lah Deparlu dan Ei-Si-Dabelyu
Dihitung-hitung jumlah halamannya dua ribu
Dan diangkut dengan dua van berwarna biru

Masing-masing lalu mempelajari dengan teliti
Perangai generasi revolusi kedua negeri ini
Kemerdekaannya satu deklarasi satu proklamasi
Presidennya pernah sama-sama politisi
Pernah pula satu anggota ABRA yang satu anggota ABRI
Yang fenomenal 32 tahun, woalah ngger, kok lama sekali
Keduanya membangun lancar diminyaki Komisi
Keduanya mengkampiunkan diri demokrasi
Keduanya menindas bangsa sendiri
Ladang pembantaian susah dihitung di kedua negeri
Kulit merah ditenggaki alkohol dan dikelabui
Keduanya sama  land grabbing, satunya slavery
Sayup-sayup di telinga John Brown digantung berani menyanyi

Si Toni I, Toni II, Toni III dan Toni IV termenung bersama
Orang State Department termangu-mangu juga
Sesudah mempelajari bahan demikian banyaknya
Kearifan bertumpuk-tumpuk di atas meja kerja
Tiba-tiba juru-bicara Deparlu bergurindam dua baris saja
“Kok sabana sayang sabana cinta
Uruih lah kampuang awak barasiahkan palanta.”

Dan delegasi Ei-Si-Dabelyu mendengar jadi terpana
Karena makna gurindam Minang samar-samar saja
Mereka minta diterjemahkan dengan segera

Sinar laser ditembakkan ke langit tiba-tiba
Di atas sungai Potomac berderet alfabet bercahaya
Kata demi kata hingga lengkap semua

TRUE PATRIOTISM HATES INJUSTICE IN ITS OWN LAND
MORE THAN ANYWHERE ELSE (so Clarence Darrow said)

Lalu delegasi empat Toni saling bertanya
“Klarens Dero, saha eta Jelema ti Tasik, meureun nya?”

***
Musim semi membebaskan cuaca dan kawanan insekta
Berlompatan dari dahan ke dahan unggas dengan seratus suara
Paru-paru dipenuhi aroma dan semua terasa jadi ringan
Kini kuisap angin dari Kanada di tepi danau Michigan

Puisi-puisi alit Emily Dickinson, kini lah saat tepat membacanya
Seumur nenek dari nenekku dia tapi bau tubuhnya betapa remaja
Teka-teki kehidupan perempuan Puritan, sampai sebagai bisikan
Selalu saja ini saat kasmaran menjelang musim panas Indian.